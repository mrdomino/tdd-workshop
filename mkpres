#!/bin/sh

PRES_MD=$(mktemp -t pres.md)
GIT_TMP=$(mktemp -d /tmp/repo.XXXXXX)
trap "rm -rf $PRES_MD $GIT_TMP" EXIT

function git_diff_py {
  local commit=$1
  local file=$2
  local diff=$(git diff $commit^..$commit -- $file)
  if [ "$(git diff $commit^..$commit -- $file 2>/dev/null)" ]
  then
    echo $'```python'
    echo "# $(basename $file)"
    git diff $commit^..$commit -- $file | sed '1,5d'
    echo $'```'
  fi
}

function git_show_py {
  local commit=$1
  local file=$2
  if git show $commit:$file >/dev/null 2>&1
  then
    echo $'```python'
    echo "# $(basename $file)"
    git show $commit:$file
    echo $'```'
  fi
}

function gen_md {
  { for commit in $(git rev-list master | tail -r)
    do
      echo $commit >&2
      echo ---
      git log --format=$'# %s\n\n%b' -n 1 $commit
      git_diff_py $commit test/test_leaderboard.py
      git_show_py $commit src/leaderboard.py
      ( rm -rf "$GIT_TMP/commit" &&
        git clone --reference "$PWD" "$PWD" "$GIT_TMP/commit" >/dev/null 2>&1 &&
        cd "$GIT_TMP/commit" &&
        git checkout $commit >/dev/null 2>&1 &&
        echo $'```'
        nosetests 2>&1
        echo $'```'
      )
    done
  } | sed '1d' > $PRES_MD
}

{ gen_md &&
  vim $PRES_MD &&
  cat $PRES_MD > pres.md &&
  sed -e '/^MARKDOWN GOES HERE$/{
    r pres.md
    d
  }' remark.html > $PRES_MD &&
  mv $PRES_MD pres.html &&
  open pres.html
}
